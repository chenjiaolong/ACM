左值与右值
C原始定义：
左值：可以出现在赋值号左边或者右边
右值：只能出现在赋值号右边
C++定义：
左值：用于标识非临时对象或者非成员函数的表达式
右值：用于标识临时对象的表达式或与任何对象无关的值(纯右值)，或者用于标识即将失效的对象的表达式（失效值）
左值引用：&
右值引用：&&
深拷贝需要频繁分配和释放内存，效率较低
移动语义的目的：所有权移交，不需要重新构造和析构
为与构造函数兼容，移动语义必须引用，而不能是指针或普通量
普通引用传递左值，以允许函数内部修改目标数据对象
为区分左值引用，实现移动语义时必须传递右值引用
为保证能够修改目标数据对象，在函数内部必须将右值引用作为左值引用对待
右值引用的意义
右值引用可以使用文字作为函数实际参数